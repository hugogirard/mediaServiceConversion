name: Create Azure Resources

on:
  push:
    branches:
      - "main"
    paths:
      - "bicep/**/*.bicep"
      - ".github/workflows/infra.yml"
  workflow_dispatch:

jobs:
  create-azure-resources:

    env:
      DEPLOYMENT_NAME: conversion-deployment
      LOCATION: 'eastus'
    
    runs-on: ubuntu-latest

    steps:
      
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}      

      - name: Validate that bicep builds
        run: bicep build main.bicep
        working-directory: ./bicep

      - name: deploy
        id: createResources
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          scope: subscription
          region: ${{ env.LOCATION }}
          deploymentName:  ${{ env.DEPLOYMENT_NAME }}
          template: ./bicep/main.json
          parameters: location=${{ env.LOCATION }} aadClientId=${{ secrets.SP_CLIENT_ID }} aadClientSecret=${{ secrets.SP_CLIENT_SECRET }}

      - uses: gliech/create-github-secret-action@v1
        with:
          name: AZURE_FUNCTIONAPP_NAME
          value: ${{ steps.createResources.outputs.functionName }}
          pa_token: ${{ secrets.PA_TOKEN }}            

      - uses: gliech/create-github-secret-action@v1
        with:
          name: AZURE_FUNCTION_ID
          value: ${{ steps.createResources.outputs.functionId }}
          pa_token: ${{ secrets.PA_TOKEN }}                

      - uses: gliech/create-github-secret-action@v1
        with:
          name: AZURE_STORAGE_MEDIA_ID
          value: ${{ steps.createResources.outputs.storageId }}
          pa_token: ${{ secrets.PA_TOKEN }} 

      - uses: gliech/create-github-secret-action@v1
        with:
          name: AZURE_STORAGE_MEDIA_NAME
          value: ${{ steps.createResources.outputs.storageName }}
          pa_token: ${{ secrets.PA_TOKEN }}         

      - uses: gliech/create-github-secret-action@v1
        with:
          name: AZURE_RESOURCE_GROUP_MEDIA_SPOKE_NAME
          value: ${{ steps.createResources.outputs.resourceGroupName }}
          pa_token: ${{ secrets.PA_TOKEN }}                   